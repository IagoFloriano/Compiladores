Não terminais inúteis na gramática

    lista_de_expressoes
    expressao
    relacao
    expressao_simples
    termo
    vezes_div_or
    fator
    variavel
    chamada_func


Terminais sem uso na gramática

    ATRIBUICAO
    LABEL
    TYPE
    ARRAY
    PROCEDURE
    FUNCTION
    GOTO
    IF
    THEN
    ELSE
    WHILE
    DO
    OR
    DIV
    AND
    NOT
    OF
    VEZES
    MAIOR
    MAIOR_IGUAL
    MENOR
    MENOR_IGUAL
    DIFERENTE
    IGUAL


Regras inúteis na gramática

   25 lista_de_expressoes: lista_de_expressoes VIRGULA expressao
   26                    | expressao

   27 expressao: expressao_simples
   28          | expressao_simples relacao expressao_simples

   29 relacao: IGUAL
   30        | DIFERENTE
   31        | MENOR
   32        | MENOR_IGUAL
   33        | MAIOR
   34        | MAIOR_IGUAL

   35 expressao_simples: %empty

   36 termo: fator vezes_div_or fator
   37      | fator

   38 vezes_div_or: VEZES
   39             | DIV
   40             | OR

   41 fator: variavel
   42      | NUMERO
   43      | chamada_func
   44      | ABRE_PARENTESES expressao FECHA_PARENTESES
   45      | NOT fator

   46 variavel: IDENT
   47         | IDENT lista_de_expressoes

   48 chamada_func: %empty


Gramática

    0 $accept: programa $end

    1 $@1: %empty

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    3 $@2: %empty

    4 bloco: parte_declara_vars $@2 comando_composto

    5 parte_declara_vars: var

    6 $@3: %empty

    7 var: $@3 VAR declara_vars
    8    | %empty

    9 declara_vars: declara_vars declara_var
   10             | declara_var

   11 $@4: %empty

   12 $@5: %empty

   13 declara_var: $@4 lista_id_var DOIS_PONTOS tipo $@5 PONTO_E_VIRGULA

   14 tipo: IDENT

   15 lista_id_var: lista_id_var VIRGULA IDENT
   16             | IDENT

   17 lista_idents: lista_idents VIRGULA IDENT
   18             | IDENT

   19 comando_composto: T_BEGIN comandos T_END

   20 comandos: comandos PONTO_E_VIRGULA comando
   21         | comando

   22 comando: NUMERO DOIS_PONTOS comando_sem_rotulo
   23        | comando_sem_rotulo

   24 comando_sem_rotulo: %empty


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    ABRE_PARENTESES (259) 2
    FECHA_PARENTESES (260) 2
    VIRGULA (261) 15 17
    PONTO_E_VIRGULA (262) 2 13 20
    DOIS_PONTOS (263) 13 22
    PONTO (264) 2
    T_BEGIN (265) 19
    T_END (266) 19
    VAR (267) 7
    NUMERO (268) 22
    IDENT (269) 2 14 15 16 17 18
    ATRIBUICAO (270)
    LABEL (271)
    TYPE (272)
    ARRAY (273)
    PROCEDURE (274)
    FUNCTION (275)
    GOTO (276)
    IF (277)
    THEN (278)
    ELSE (279)
    WHILE (280)
    DO (281)
    OR (282)
    DIV (283)
    AND (284)
    NOT (285)
    OF (286)
    VEZES (287)
    MAIOR (288)
    MAIOR_IGUAL (289)
    MENOR (290)
    MENOR_IGUAL (291)
    DIFERENTE (292)
    IGUAL (293)


Não terminais com as regras onde eles aparecem

    $accept (39)
        à esquerda: 0
    programa (40)
        à esquerda: 2
        à direita: 0
    $@1 (41)
        à esquerda: 1
        à direita: 2
    bloco (42)
        à esquerda: 4
        à direita: 2
    $@2 (43)
        à esquerda: 3
        à direita: 4
    parte_declara_vars (44)
        à esquerda: 5
        à direita: 4
    var (45)
        à esquerda: 7 8
        à direita: 5
    $@3 (46)
        à esquerda: 6
        à direita: 7
    declara_vars (47)
        à esquerda: 9 10
        à direita: 7 9
    declara_var (48)
        à esquerda: 13
        à direita: 9 10
    $@4 (49)
        à esquerda: 11
        à direita: 13
    $@5 (50)
        à esquerda: 12
        à direita: 13
    tipo (51)
        à esquerda: 14
        à direita: 13
    lista_id_var (52)
        à esquerda: 15 16
        à direita: 13 15
    lista_idents (53)
        à esquerda: 17 18
        à direita: 2 17
    comando_composto (54)
        à esquerda: 19
        à direita: 4
    comandos (55)
        à esquerda: 20 21
        à direita: 19 20
    comando (56)
        à esquerda: 22 23
        à direita: 20 21
    comando_sem_rotulo (57)
        à esquerda: 24
        à direita: 22 23


Estado 0

    0 $accept: • programa $end

    $padrão  reduzir usando a regra 1 ($@1)

    programa  ir ao estado 1
    $@1       ir ao estado 2


Estado 1

    0 $accept: programa • $end

    $end  deslocar, e ir ao estado 3


Estado 2

    2 programa: $@1 • PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    PROGRAM  deslocar, e ir ao estado 4


Estado 3

    0 $accept: programa $end •

    $padrão  aceitar


Estado 4

    2 programa: $@1 PROGRAM • IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  deslocar, e ir ao estado 5


Estado 5

    2 programa: $@1 PROGRAM IDENT • ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    ABRE_PARENTESES  deslocar, e ir ao estado 6


Estado 6

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES • lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  deslocar, e ir ao estado 7

    lista_idents  ir ao estado 8


Estado 7

   18 lista_idents: IDENT •

    $padrão  reduzir usando a regra 18 (lista_idents)


Estado 8

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents • FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO
   17 lista_idents: lista_idents • VIRGULA IDENT

    FECHA_PARENTESES  deslocar, e ir ao estado 9
    VIRGULA           deslocar, e ir ao estado 10


Estado 9

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES • PONTO_E_VIRGULA bloco PONTO

    PONTO_E_VIRGULA  deslocar, e ir ao estado 11


Estado 10

   17 lista_idents: lista_idents VIRGULA • IDENT

    IDENT  deslocar, e ir ao estado 12


Estado 11

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA • bloco PONTO

    T_BEGIN  reduzir usando a regra 8 (var)
    $padrão  reduzir usando a regra 6 ($@3)

    bloco               ir ao estado 13
    parte_declara_vars  ir ao estado 14
    var                 ir ao estado 15
    $@3                 ir ao estado 16


Estado 12

   17 lista_idents: lista_idents VIRGULA IDENT •

    $padrão  reduzir usando a regra 17 (lista_idents)


Estado 13

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco • PONTO

    PONTO  deslocar, e ir ao estado 17


Estado 14

    4 bloco: parte_declara_vars • $@2 comando_composto

    $padrão  reduzir usando a regra 3 ($@2)

    $@2  ir ao estado 18


Estado 15

    5 parte_declara_vars: var •

    $padrão  reduzir usando a regra 5 (parte_declara_vars)


Estado 16

    7 var: $@3 • VAR declara_vars

    VAR  deslocar, e ir ao estado 19


Estado 17

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO •

    $padrão  reduzir usando a regra 2 (programa)


Estado 18

    4 bloco: parte_declara_vars $@2 • comando_composto

    T_BEGIN  deslocar, e ir ao estado 20

    comando_composto  ir ao estado 21


Estado 19

    7 var: $@3 VAR • declara_vars

    $padrão  reduzir usando a regra 11 ($@4)

    declara_vars  ir ao estado 22
    declara_var   ir ao estado 23
    $@4           ir ao estado 24


Estado 20

   19 comando_composto: T_BEGIN • comandos T_END

    NUMERO  deslocar, e ir ao estado 25

    $padrão  reduzir usando a regra 24 (comando_sem_rotulo)

    comandos            ir ao estado 26
    comando             ir ao estado 27
    comando_sem_rotulo  ir ao estado 28


Estado 21

    4 bloco: parte_declara_vars $@2 comando_composto •

    $padrão  reduzir usando a regra 4 (bloco)


Estado 22

    7 var: $@3 VAR declara_vars •
    9 declara_vars: declara_vars • declara_var

    IDENT    reduzir usando a regra 11 ($@4)
    $padrão  reduzir usando a regra 7 (var)

    declara_var  ir ao estado 29
    $@4          ir ao estado 24


Estado 23

   10 declara_vars: declara_var •

    $padrão  reduzir usando a regra 10 (declara_vars)


Estado 24

   13 declara_var: $@4 • lista_id_var DOIS_PONTOS tipo $@5 PONTO_E_VIRGULA

    IDENT  deslocar, e ir ao estado 30

    lista_id_var  ir ao estado 31


Estado 25

   22 comando: NUMERO • DOIS_PONTOS comando_sem_rotulo

    DOIS_PONTOS  deslocar, e ir ao estado 32


Estado 26

   19 comando_composto: T_BEGIN comandos • T_END
   20 comandos: comandos • PONTO_E_VIRGULA comando

    PONTO_E_VIRGULA  deslocar, e ir ao estado 33
    T_END            deslocar, e ir ao estado 34


Estado 27

   21 comandos: comando •

    $padrão  reduzir usando a regra 21 (comandos)


Estado 28

   23 comando: comando_sem_rotulo •

    $padrão  reduzir usando a regra 23 (comando)


Estado 29

    9 declara_vars: declara_vars declara_var •

    $padrão  reduzir usando a regra 9 (declara_vars)


Estado 30

   16 lista_id_var: IDENT •

    $padrão  reduzir usando a regra 16 (lista_id_var)


Estado 31

   13 declara_var: $@4 lista_id_var • DOIS_PONTOS tipo $@5 PONTO_E_VIRGULA
   15 lista_id_var: lista_id_var • VIRGULA IDENT

    VIRGULA      deslocar, e ir ao estado 35
    DOIS_PONTOS  deslocar, e ir ao estado 36


Estado 32

   22 comando: NUMERO DOIS_PONTOS • comando_sem_rotulo

    $padrão  reduzir usando a regra 24 (comando_sem_rotulo)

    comando_sem_rotulo  ir ao estado 37


Estado 33

   20 comandos: comandos PONTO_E_VIRGULA • comando

    NUMERO  deslocar, e ir ao estado 25

    $padrão  reduzir usando a regra 24 (comando_sem_rotulo)

    comando             ir ao estado 38
    comando_sem_rotulo  ir ao estado 28


Estado 34

   19 comando_composto: T_BEGIN comandos T_END •

    $padrão  reduzir usando a regra 19 (comando_composto)


Estado 35

   15 lista_id_var: lista_id_var VIRGULA • IDENT

    IDENT  deslocar, e ir ao estado 39


Estado 36

   13 declara_var: $@4 lista_id_var DOIS_PONTOS • tipo $@5 PONTO_E_VIRGULA

    IDENT  deslocar, e ir ao estado 40

    tipo  ir ao estado 41


Estado 37

   22 comando: NUMERO DOIS_PONTOS comando_sem_rotulo •

    $padrão  reduzir usando a regra 22 (comando)


Estado 38

   20 comandos: comandos PONTO_E_VIRGULA comando •

    $padrão  reduzir usando a regra 20 (comandos)


Estado 39

   15 lista_id_var: lista_id_var VIRGULA IDENT •

    $padrão  reduzir usando a regra 15 (lista_id_var)


Estado 40

   14 tipo: IDENT •

    $padrão  reduzir usando a regra 14 (tipo)


Estado 41

   13 declara_var: $@4 lista_id_var DOIS_PONTOS tipo • $@5 PONTO_E_VIRGULA

    $padrão  reduzir usando a regra 12 ($@5)

    $@5  ir ao estado 42


Estado 42

   13 declara_var: $@4 lista_id_var DOIS_PONTOS tipo $@5 • PONTO_E_VIRGULA

    PONTO_E_VIRGULA  deslocar, e ir ao estado 43


Estado 43

   13 declara_var: $@4 lista_id_var DOIS_PONTOS tipo $@5 PONTO_E_VIRGULA •

    $padrão  reduzir usando a regra 13 (declara_var)
